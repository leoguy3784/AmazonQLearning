from password_checker import password_check

def penetration_test():
    """Perform penetration testing on password_check function"""
    
    print("=== PENETRATION TESTING PASSWORD CHECKER ===\n")
    
    # Test 1: Input Type Attacks
    print("1. INPUT TYPE ATTACKS:")
    test_cases = [
        (None, "None input"),
        (123, "Integer input"),
        ([], "List input"),
        ({}, "Dict input"),
        (True, "Boolean input")
    ]
    
    for test_input, description in test_cases:
        try:
            result = password_check(test_input)
            print(f"   {description}: {result}")
        except Exception as e:
            print(f"   {description}: ERROR - {e}")
    
    # Test 2: Edge Cases
    print("\n2. EDGE CASE ATTACKS:")
    edge_cases = [
        ("", "Empty string"),
        (" " * 8, "8 spaces"),
        ("A1a!" + "x" * 100, "Very long password"),
        ("A1a!\x00", "Null byte injection"),
        ("A1a!\n\r\t", "Control characters")
    ]
    
    for test_input, description in edge_cases:
        result = password_check(test_input)
        print(f"   {description}: {result}")
    
    # Test 3: Bypass Attempts
    print("\n3. VALIDATION BYPASS ATTEMPTS:")
    bypass_attempts = [
        ("Password1!", "Common pattern"),
        ("Passw0rd!", "L33t speak"),
        ("Admin123!", "Admin variant"),
        ("Welcome1!", "Welcome variant"),
        ("Qwerty1!", "Qwerty variant"),
        ("P@ssw0rd", "Special char substitution"),
        ("Aa1!Aa1!", "Repeated pattern"),
        ("A1a!4567", "Sequential numbers"),
        ("A1a!wxyz", "Sequential letters")
    ]
    
    for test_input, description in bypass_attempts:
        result = password_check(test_input)
        status = "BYPASSED" if result == "Password is valid" else "BLOCKED"
        print(f"   {description}: {status} - {result}")
    
    # Test 4: Unicode and Special Character Attacks
    print("\n4. UNICODE/SPECIAL CHARACTER ATTACKS:")
    unicode_tests = [
        ("PÃ¤ssw0rd!", "Unicode characters"),
        ("PassðŸ”’1!", "Emoji characters"),
        ("A1a!â„¢Â®Â©", "Special symbols"),
        ("A1a!ã€€", "Unicode space"),
        ("A1a!\u200b", "Zero-width space")
    ]
    
    for test_input, description in unicode_tests:
        result = password_check(test_input)
        status = "ACCEPTED" if result == "Password is valid" else "REJECTED"
        print(f"   {description}: {status} - {result}")

if __name__ == "__main__":
    penetration_test()